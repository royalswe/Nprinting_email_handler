@model AnalyticConfig.Models.User


@using (Html.BeginForm("Create", "Home", new { username = Request.Params["username"] }, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-10"><h4>Skapa ny mottagare</h4></div>
    </div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.SchoolUnit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SchoolUnit", new SelectList(ViewBag.schoolUnitList, "Text", "Value"), "Välj skolenhet", new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.SchoolUnit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Role, Model.RoleList, "Välj roll", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger", })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "För Excel rapporter" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button input type="submit" class="btn btn-success"><span class="glyphicon glyphicon-ok"></span> Skapa mottagare</button>
            <button class="show-create-form btn btn-danger"><span class="glyphicon glyphicon-remove"></span> Avbryt</button>
        </div>
    </div>
}
